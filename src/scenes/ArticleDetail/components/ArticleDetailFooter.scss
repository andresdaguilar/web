@import "../../../shared/includes.scss";

.ArticleDetailFooter {
	margin: 0 auto;
	max-width: 1024px;

	.nav {
		background-color: $titleBackground;
		border: 1px solid #ddd;
		display: flex;
		overflow: hidden;
		padding: 5px 0;

		@media (min-width: $desktopBreakpoint) {
			border-radius: 5px;
		}
	}
	
	.subscription {
		text-align: center;
		margin: 20px;

		a {
			text-decoration: underline;
		}
	}

	// hr {
	// 	padding: 0;
	// 	margin: auto;
	// 	border: 0;
	// 	border-top-width: 1px;
	// 	border-top-color: #ddd;
	// 	border-style: solid;
	// 	border-radius: 1px;
	// 	height: 0;
	// }

	.divider {
		border-top-color: #ddd;
		// border-top-color: darken($dividerColor, 20%);
	}
	.icon {
		padding: 0 10px;
	}
	// .verticalHR {
	// 	border-left: 1px black solid;
	// 	width: 2px;
	// 	display: block;
	// 	height: 40px;
	// 	.ltr & {
	// 		margin-right: 20px;
	// 	}
	// 	.rtl & {
	// 		margin-left: 20px;
	// 	}
	// }

	.page-selector {
		align-items: center;
		cursor: pointer;
		display: flex;
		flex-direction: row;
		margin: 0;
		min-height: 60px;
		// padding: 10px 0 0;
		width: 100%;

		&:hover {
			h1 {
				text-decoration: underline;
			}
		}

		&.next {
			justify-content: flex-end;
			padding-left: 10px;
		}

		&.prev {
			padding-right: 10px;
		}

		.caption {
			display: flex;
			flex-flow: column;
		}
		
		small {
			color: lighten(black, 50%);
			display: block;
			font-size: 12px;
			width: 100%;
		}

		h1 {
			display: block;
			font-size: 15px;
			font-weight: normal;
			margin: 0;
			user-select: none;
			width: 100%;
		}
	}

	// .sharePage {
	// 	padding: 0px;
	// }
	// .sharePage > h1 {
	// 	padding: 0;
	// 	&:first-child {
	// 		flex: 1;
	// 		.ltr & {
	// 			padding-left: 20px;
	// 		}
	// 		.rtl & {
	// 			padding-right: 20px;
	// 		}
	// 	}
	// }

	// .sharePage .icon {
	// 	margin: 0px 5px 0px 5px;

	// 	.ltr & {
	// 		margin-right: 20px;
	// 	}
	// 	.rtl & {
	// 		margin-left: 20px;
	// 	}
	// }

	.up {
		display: none;
	}

	input {
		display: none;
	}

	input:checked + label > .up {
		display: flex;
	}

	input:checked + label > .down {
		display: none;
	}

	input:checked ~ ul {
		display: block;

		transition: display 2s ease-in-out;
	}
}
