$accentIRC: #ffda1a;
$accentGreen: #29991f;
$accentRed: #e60000;
$accentNRC: #ff7602;
$accentPG: #59c2ed;

$desktopBreakpoint: 1000px;
$bigDesktopBreakpoint: 1400px;
$desktopPaddingWidth: 15vw;
$bigDesktopPaddingWidth: 20vw;

$titleBackground: #f0f0f0;
$dividerColor: darken($titleBackground, 30%);

$colorMap: (irc: $accentIRC, nrc: $accentNRC, generic: $accentGreen, mc: $accentRed, pg: $accentPG);
$colorInverseMap: (irc: #000000, nrc: #ffffff, generic: #ffffff, mc: #ffffff, pg: #ffffff);

@mixin grayscale-brand-colors($prop) {
	@each $org in map-keys($map: $colorMap) {
		.#{$org} & {
			#{$prop}: lighten(grayscale(map-get($map: $colorMap, $key: $org)), 20%);
		}
	}
}

@mixin darken-brand-colors($prop, $per) {
	@each $org in map-keys($map: $colorMap) {
		.#{$org} &  {
			#{$prop}: darken(map-get($map: $colorMap, $key: $org), $per);
		}
	}
}

@mixin lighten-brand-colors($prop, $per) {
	@each $org in map-keys($map: $colorMap) {
		.#{$org} & {
			#{$prop}: lighten(map-get($map: $colorMap, $key: $org), $per);
		}
	}
}
@mixin brand-colors($prop) {
	@each $org in map-keys($map: $colorMap) {
		.#{$org} &  {
			#{$prop}: map-get($map: $colorMap, $key: $org);
		}
	}
}

@mixin brand-colors-inverse($prop) {
	@each $org in map-keys($map: $colorInverseMap) {
		.#{$org} &  {
			#{$prop}: map-get($map: $colorInverseMap, $key: $org);
		}
	}
}
